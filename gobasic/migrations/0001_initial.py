# Generated by Django 4.1.3 on 2022-11-01 17:02

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_title', models.CharField(max_length=20, unique=True)),
                ('acitivity_duration', models.CharField(choices=[('1H', '1 hour'), ('2H', '2 hour'), ('3H', '3 hour'), ('1D', '1 Day'), ('2D', '2 Day'), ('4D', '4 Day'), ('6D', '6 Day')], max_length=2)),
                ('description', models.CharField(max_length=250)),
                ('mrp_cost', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100000), django.core.validators.MinValueValidator(0)])),
                ('net_cost', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100000), django.core.validators.MinValueValidator(0)])),
                ('margin', models.PositiveIntegerField(default=0)),
                ('entry_last_updated', models.DateTimeField(auto_now=True)),
                ('entry_created', models.DateTimeField(auto_now_add=True)),
                ('activity_status', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['margin'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('mobile', models.CharField(help_text='<em>10 digits</em>', max_length=12, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, unique=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('source', models.CharField(choices=[('whatsapp', 'WhatsApp'), ('email', 'Email'), ('phone', 'Phone'), ('founder', 'Founder'), ('socialm', 'Social Media'), ('web', 'Website'), ('other', 'Other')], max_length=10)),
                ('entry_last_updated', models.DateTimeField(auto_now=True)),
                ('entry_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['entry_created'],
            },
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_name', models.CharField(max_length=25, unique=True)),
                ('customer_rating', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=1)),
                ('room_category', models.CharField(max_length=15)),
                ('location', models.CharField(choices=[('Pb', 'Port Blair'), ('Hv', 'Havelock'), ('Nl', 'Neil')], max_length=2)),
                ('ep_cost', models.PositiveIntegerField(default=0, help_text='Per Day for 2pax', validators=[django.core.validators.MaxValueValidator(100000), django.core.validators.MinValueValidator(0)])),
                ('cp_cost', models.PositiveIntegerField(default=0, help_text='Per Day for 2pax', validators=[django.core.validators.MaxValueValidator(100000), django.core.validators.MinValueValidator(0)])),
                ('map_cost', models.PositiveIntegerField(default=0, help_text='Per Day for 2pax', validators=[django.core.validators.MaxValueValidator(100000), django.core.validators.MinValueValidator(0)])),
                ('ap_cost', models.PositiveIntegerField(default=0, help_text='Per Day for 2pax', validators=[django.core.validators.MaxValueValidator(100000), django.core.validators.MinValueValidator(0)])),
                ('ep_child', models.PositiveIntegerField(default=0, help_text='Per Day for 1pax', validators=[django.core.validators.MaxValueValidator(100000), django.core.validators.MinValueValidator(0)])),
                ('cp_child', models.PositiveIntegerField(default=0, help_text='Per Day for 1pax', validators=[django.core.validators.MaxValueValidator(100000), django.core.validators.MinValueValidator(0)])),
                ('map_child', models.PositiveIntegerField(default=0, help_text='Per Day for 1pax', validators=[django.core.validators.MaxValueValidator(100000), django.core.validators.MinValueValidator(0)])),
                ('ap_child', models.PositiveIntegerField(default=0, help_text='Per Day for 1pax', validators=[django.core.validators.MaxValueValidator(100000), django.core.validators.MinValueValidator(0)])),
                ('entry_last_updated', models.DateTimeField(auto_now=True)),
                ('entry_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['customer_rating'],
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, help_text='yyyy-mm-dd,hh--mm')),
                ('duration', models.PositiveSmallIntegerField(default=0, verbose_name='Trip Nights')),
                ('end_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('total_cost', models.PositiveIntegerField(default=0)),
                ('advance_paid', models.PositiveIntegerField(default=0)),
                ('balance_due', models.PositiveIntegerField(default=0)),
                ('trip_completed', models.BooleanField(default=False)),
                ('entry_last_updated', models.DateTimeField(auto_now=True)),
                ('entry_created', models.DateTimeField(auto_now_add=True)),
                ('acitivity_hv', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='hv_activity_set', to='gobasic.activity')),
                ('acitivity_nl', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='nl_activity_set', to='gobasic.activity')),
                ('acitivity_pb', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='pb_activity_set', to='gobasic.activity')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gobasic.customer')),
                ('hotel_hv', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='hv_hotel_set', to='gobasic.hotel')),
                ('hotel_nl', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='nl_hotel_set', to='gobasic.hotel')),
                ('hotel_pb', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='pb_hotel_set', to='gobasic.hotel')),
            ],
            options={
                'ordering': ['start_date'],
            },
        ),
    ]
